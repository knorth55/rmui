<launch>
  <arg name="rmui_name" default="rmui0" />
  <arg name="dummy" default="false" />
  <arg name="launch_device" default="true" />
  <arg name="launch_static_transform" default="true" />

  <arg name="n_board" default="6" />
  <arg name="duration" default="0.1" />
  <arg name="gui" default="true" />

  <group unless="$(arg dummy)">
    <include file="$(find rmui_drivers)/launch/$(arg rmui_name).launch">
      <arg name="n_board" value="$(arg n_board)" />
      <arg name="duration" value="$(arg duration)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="launch_device" value="$(arg launch_device)" />
    </include>
  </group>
  <group if="$(arg dummy)">
    <include file="$(find rmui_drivers)/launch/$(arg rmui_name)_dummy.launch">
      <arg name="n_board" value="$(arg n_board)" />
      <arg name="duration" value="$(arg duration)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="launch_device" value="$(arg launch_device)" />
    </include>
  </group>
  <node pkg="tf" type="static_transform_publisher" name="rmui0_static_transform_publisher"
        args="0 0 0 0 0 0 1 rmui_world rmui0_world 100" if="$(arg launch_static_transform)" />

  <group ns="$(arg rmui_name)">
    <node pkg="rmui_demos" name="rmui_pose_publisher" type="rmui_pose_publisher.py"
          respawn="true" output="screen">
      <rosparam subst_value="true">
        rmui_frame_id: $(arg rmui_name)_link
      </rosparam>
    </node>
  </group>

</launch>
